name: User Service CI

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: user_service_db
          POSTGRES_USER: movietime_user
          POSTGRES_PASSWORD: movietime_pass
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and run tests
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/user_service_db
          SPRING_DATASOURCE_USERNAME: movietime_user
          SPRING_DATASOURCE_PASSWORD: movietime_pass
        run: mvn -f microservices/user-service/pom.xml clean verify

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=juancaguillens01_movietime_user-service
            -Dsonar.organization=juancaguillens01
            -Dsonar.sources=microservices/user-service/src
            -Dsonar.java.binaries=microservices/user-service/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=microservices/user-service/target/site/jacoco/jacoco.xml